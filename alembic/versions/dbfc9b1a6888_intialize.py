"""intialize

Revision ID: dbfc9b1a6888
Revises: 
Create Date: 2023-09-04 19:40:19.484936

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'dbfc9b1a6888'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('first_name', sa.String(), nullable=False),
                    sa.Column('last_name', sa.String(), nullable=False),
                    sa.Column('email', sa.String(), nullable=False),
                    sa.Column('password', sa.String(), nullable=False),
                    sa.Column('created_at', sa.TIMESTAMP(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email')
                    )
    op.create_table('users_career_interests',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('career_level', sa.String(), nullable=False),
                    sa.Column('job_types', sa.String(), nullable=False),
                    sa.Column('job_titles', sa.String(), nullable=True),
                    sa.Column('job_categories', sa.String(), nullable=False),
                    sa.Column('min_salary', sa.String(), nullable=False),
                    sa.Column('hide_min_salary', sa.Boolean(), nullable=False),
                    sa.Column('perfered_job_location',
                              sa.String(), nullable=True),
                    sa.Column('current_job_search_status',
                              sa.String(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['users.id'], ondelete='cascade'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('user_id')
                    )
    op.create_table('users_cv',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('cv_name', sa.String(), nullable=False),
                    sa.Column('cv_file', sa.LargeBinary(), nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['users.id'], ondelete='cascade'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('user_id')
                    )
    op.create_table('users_education',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('degree', sa.String(), nullable=False),
                    sa.Column('field_of_study', sa.String(), nullable=False),
                    sa.Column('university', sa.String(), nullable=False),
                    sa.Column('degree_year', sa.String(), nullable=False),
                    sa.Column('grade', sa.String(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['users.id'], ondelete='cascade'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('users_img',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('img_name', sa.String(), nullable=False),
                    sa.Column('img_file', sa.LargeBinary(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['users.id'], ondelete='cascade'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('user_id')
                    )
    op.create_table('users_languages',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('language', sa.String(), nullable=False),
                    sa.Column('proficiency', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['users.id'], ondelete='cascade'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('users_personal_info',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('middel_name', sa.String(), nullable=True),
                    sa.Column('birthdate', sa.DateTime(), nullable=False),
                    sa.Column('gender', sa.String(), nullable=False),
                    sa.Column('nationality', sa.String(), nullable=False),
                    sa.Column('marital_status', sa.String(), nullable=True),
                    sa.Column('military_status', sa.String(), nullable=True),
                    sa.Column('driving_license', sa.String(), nullable=True),
                    sa.Column('address', sa.String(), nullable=False),
                    sa.Column('phone', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['users.id'], ondelete='cascade'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('user_id')
                    )
    op.create_table('users_skills',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('skill', sa.String(), nullable=False),
                    sa.Column('proficiency', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['users.id'], ondelete='cascade'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('users_work_experience',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('experience_type', sa.String(), nullable=False),
                    sa.Column('job_title', sa.String(), nullable=False),
                    sa.Column('job_category', sa.String(), nullable=False),
                    sa.Column('company_name', sa.String(), nullable=False),
                    sa.Column('start_date', sa.DateTime(), nullable=False),
                    sa.Column('end_date', sa.DateTime(), nullable=True),
                    sa.Column('work_there', sa.Boolean(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['users.id'], ondelete='cascade'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('user_id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_work_experience')
    op.drop_table('users_skills')
    op.drop_table('users_personal_info')
    op.drop_table('users_languages')
    op.drop_table('users_img')
    op.drop_table('users_education')
    op.drop_table('users_cv')
    op.drop_table('users_career_interests')
    op.drop_table('users')
    # ### end Alembic commands ###
